/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package gui;

import common.Session;
import db.DatabaseController;
import entity.Task;
import entity.User;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author gvt48
 */
import java.time.LocalDateTime;
import java.time.ZoneId;
import java.util.Collections;
import java.util.Comparator;
public class RecommendationsWindow extends javax.swing.JDialog {

    private Session s;
    private ArrayList<Task> tasks;
    
    /** Creates new form RecommendationsWindow */
    public RecommendationsWindow(java.awt.Frame parent, boolean modal, Session s) {
        super(parent, modal);
        initComponents();
        
        this.s = s;
        this.refreshTable();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        algSelectionField = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        closeBtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        daysLabel = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        algSelectionField.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Keturių kategorijų", "Anksčiausi pirmiausia" }));
        algSelectionField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                algSelectionFieldActionPerformed(evt);
            }
        });

        jLabel1.setText("Algoritmas");

        closeBtn.setText("Išeiti");
        closeBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeBtnActionPerformed(evt);
            }
        });

        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Pavadinimas", "Terminas", "Svarbus", "Algoritmo kategorija"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(table);

        jLabel2.setText("Skubumo terminas: ");

        daysLabel.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        daysLabel.setText("jLabel3");

        jLabel3.setText("dienos iki veiklos termino.");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 633, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(closeBtn))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(algSelectionField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(daysLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel3)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(algSelectionField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(daysLabel)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(closeBtn)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void closeBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeBtnActionPerformed
        this.dispose();
    }//GEN-LAST:event_closeBtnActionPerformed

    private void algSelectionFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_algSelectionFieldActionPerformed
        this.refreshTable();
    }//GEN-LAST:event_algSelectionFieldActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RecommendationsWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RecommendationsWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RecommendationsWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RecommendationsWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
    }
    
    private void refreshTable() {
        this.tasks = new DatabaseController().getUserTasks(this.s.getUserId());
        User u = new DatabaseController().getUser(this.s.getUserId());
        this.daysLabel.setText(Integer.toString(u.getUrgencyPeriod()));
        
        DefaultTableModel dm = (DefaultTableModel) this.table.getModel();
        int rowCount = dm.getRowCount();
        //Remove rows one by one from the end of the table
        for (int i = rowCount - 1; i >= 0; i--) {
            dm.removeRow(i);
        }
        
        this.sortTasksAccordingToAlgorythm(this.algSelectionField.getSelectedIndex(), u);
        
        DateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd HH:mm");  
        
        for (Task o : tasks) {
            String deadline = dateFormat.format(o.getDeadline());

            String[] row = {
                o.getName(),
                deadline,
                o.getPriority() == 1 ? "Taip" : "Ne",
                o.getAlgCriteria()
            };
            dm.addRow(row);
        }
    }
    
    private void sortTasksAccordingToAlgorythm(int alg, User u) {
        if (alg == 0) {
            // 4 main categories sort
            Date in = new Date();
            LocalDateTime ldt = LocalDateTime.ofInstant(in.toInstant(), ZoneId.systemDefault()).plusDays(u.getUrgencyPeriod());
            Date comparisonDate = Date.from(ldt.atZone(ZoneId.systemDefault()).toInstant());
            this.tasks.forEach(o -> {
                if (o.getPriority() == 1 && comparisonDate.after(o.getDeadline())) {
                    o.setAlgCriteria("Svarbus ir skubus");
                    o.setAlgCriteriaNumeric(3);
                } else if (o.getPriority() == 1 && !comparisonDate.after(o.getDeadline())) {
                    o.setAlgCriteria("Svarbus ir neskubus");
                    o.setAlgCriteriaNumeric(2);
                } else if (o.getPriority() == 0 && comparisonDate.after(o.getDeadline())) {
                    o.setAlgCriteria("Nesvarbus, bet skubus");
                    o.setAlgCriteriaNumeric(1);
                } else {
                    o.setAlgCriteria("Nesvarbus ir neskubus");
                    o.setAlgCriteriaNumeric(0);
                }
            });
            
            Collections.sort(this.tasks, (Task e1, Task e2) -> e2.getAlgCriteriaNumeric().compareTo(e1.getAlgCriteriaNumeric()));
        } else if (alg == 1) {
            System.out.println(tasks);
            Collections.sort(this.tasks, (Task e1, Task e2) -> e1.getDeadline().compareTo(e2.getDeadline()));
            System.out.println(tasks);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> algSelectionField;
    private javax.swing.JButton closeBtn;
    private javax.swing.JLabel daysLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable table;
    // End of variables declaration//GEN-END:variables

}
